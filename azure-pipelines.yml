# Starter pipeline for building and packaging an ASP.NET project

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  imageName: 'akhan2017/webapplegacywin'
  baseImage: 'mcr.microsoft.com/dotnet/framework/aspnet:4.8.1'
  normalizedBaseImageKey: "$(baseImage)".replace('/', '-').replace(':', '-')

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '**/*.sln'

#- task: VSBuild@1
#  inputs:
#    solution: '**/*.sln'
#    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(Build.ArtifactStagingDirectory)\AppPackage.zip"'
#    platform: 'Any CPU'
#    configuration: '$(buildConfiguration)'

#- task: PublishBuildArtifacts@1
#  inputs:
#    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#    ArtifactName: 'drop'
#    publishLocation: 'Container'

- task: VSBuild@1
  inputs:
    solution: '**/*.sln'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=FileSystem /p:OutDir=$(Build.ArtifactStagingDirectory)/app.publish/'
    platform: 'Any CPU'
    configuration: '$(buildConfiguration)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/app.publish'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: Cache@2
  inputs:
    key: 'docker|base-image|$(normalizedBaseImageKey)'
    restoreKeys: 'docker|base-image'
    path: 'C:/ProgramData/docker'

# Step 3: Pre-pull the base image (if not already cached)
- script: |
    docker pull $(baseImage) || echo "Base image not found in cache, downloading..."
  displayName: 'Pre-pull Base Image'

- task: Docker@2
  inputs:
    containerRegistry: 'acrRegistryConnection' 
    repository: '$(imageName)'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: |
      $(Build.BuildId)



